{
 "doc": null,
 "fqname": "apidoc",
 "dict": {
  "path": {
   "name": "apidoc.path",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/path.py",
   "fqname": "apidoc.path"
  },
  "modules": {
   "name": "apidoc.modules",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/modules.py",
   "fqname": "apidoc.modules"
  }
 },
 "name": "apidoc",
 "type": "package",
 "path": "/Users/samuel/dev/apidoc/src/python/apidoc/__init__.py",
 "modules": {
  "path": {
   "doc": null,
   "fqname": "apidoc.path",
   "dict": {
    "resolve": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      6,
      14
     ],
     "fqname": "apidoc.path.resolve",
     "doc": "Resolves the existing part of a path."
    },
    "Path": {
     "doc": null,
     "mro": [
      "Path",
      "PosixPath",
      "Path",
      "PurePosixPath",
      "PurePath",
      "object"
     ],
     "fqname": "apidoc.path.Path",
     "dict": {
      "_make_child": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        619,
        624
       ],
       "fqname": "apidoc.path.Path._make_child",
       "doc": null
      },
      "is_char_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1244,
        1256
       ],
       "fqname": "apidoc.path.Path.is_char_device",
       "doc": "Whether this path is a character device."
      },
      "mkdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "parents",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1095,
        1108
       ],
       "fqname": "apidoc.path.Path.mkdir",
       "doc": null
      },
      "rglob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        990,
        1001
       ],
       "fqname": "apidoc.path.Path.rglob",
       "doc": "Recursively yield all existing files (of any kind, including\ndirectories) matching the given pattern, anywhere in this subtree."
      },
      "resolve": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1020,
        1039
       ],
       "fqname": "apidoc.path.Path.resolve",
       "doc": "Make the path absolute, resolving all symlinks on the way and also\nnormalizing it (for example turning slashes into backslashes under\nWindows)."
      },
      "joinpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        819,
        826
       ],
       "fqname": "apidoc.path.Path.joinpath",
       "doc": "Combine this path with one or several arguments, and return a\nnew path representing either a subpath (if all arguments are relative\npaths) or a totally different path (if one of the arguments is\nanchored)."
      },
      "_str": {
       "type": "value",
       "value": "<member '_str' of 'PurePath' objects>"
      },
      "exists": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1180,
        1191
       ],
       "fqname": "apidoc.path.Path.exists",
       "doc": "Whether this path exists."
      },
      "is_socket": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1270,
        1282
       ],
       "fqname": "apidoc.path.Path.is_socket",
       "doc": "Whether this path is a socket."
      },
      "symlink_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target_is_directory",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1169,
        1177
       ],
       "fqname": "apidoc.path.Path.symlink_to",
       "doc": "Make this path a symlink pointing to the given path.\nNote the order of arguments (self, target) is the reverse of os.symlink's."
      },
      "rmdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1135,
        1142
       ],
       "fqname": "apidoc.path.Path.rmdir",
       "doc": "Remove this directory.  The directory must be empty."
      },
      "parents": {
       "type": "value",
       "value": "<property object at 0x101146548>"
      },
      "parent": {
       "type": "value",
       "value": "<property object at 0x1011464f8>"
      },
      "is_dir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1192,
        1204
       ],
       "fqname": "apidoc.path.Path.is_dir",
       "doc": "Whether this path is a directory."
      },
      "is_block_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1231,
        1243
       ],
       "fqname": "apidoc.path.Path.is_block_device",
       "doc": "Whether this path is a block device."
      },
      "group": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1054,
        1060
       ],
       "fqname": "apidoc.path.Path.group",
       "doc": "Return the group name of the file gid."
      },
      "_format_parsed_parts": {
       "type": "value",
       "value": "<bound method type._format_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "_init": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "template",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        915,
        924
       ],
       "fqname": "apidoc.path.Path._init",
       "doc": null
      },
      "as_uri": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        649,
        654
       ],
       "fqname": "apidoc.path.Path.as_uri",
       "doc": "Return the path as a 'file' URI."
      },
      "_parts": {
       "type": "value",
       "value": "<member '_parts' of 'PurePath' objects>"
      },
      "rename": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1152,
        1159
       ],
       "fqname": "apidoc.path.Path.rename",
       "doc": "Rename this path to the given path."
      },
      "is_fifo": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1257,
        1269
       ],
       "fqname": "apidoc.path.Path.is_fifo",
       "doc": "Whether this path is a FIFO."
      },
      "_hash": {
       "type": "value",
       "value": "<member '_hash' of 'PurePath' objects>"
      },
      "starts_with": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "prefix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        39,
        41
       ],
       "fqname": "apidoc.path.Path.starts_with",
       "doc": null
      },
      "iterdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        964,
        977
       ],
       "fqname": "apidoc.path.Path.iterdir",
       "doc": "Iterate over the files in this directory.  Does not yield any\nresult for the special paths '.' and '..'."
      },
      "drive": {
       "type": "value",
       "value": "<property object at 0x101146278>"
      },
      "match": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path_pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        860,
        884
       ],
       "fqname": "apidoc.path.Path.match",
       "doc": "Return True if this path matches the given pattern."
      },
      "is_symlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1219,
        1230
       ],
       "fqname": "apidoc.path.Path.is_symlink",
       "doc": "Whether this path is a symbolic link."
      },
      "_raise_closed": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        939,
        941
       ],
       "fqname": "apidoc.path.Path._raise_closed",
       "doc": null
      },
      "parts": {
       "type": "value",
       "value": "<property object at 0x1011464a8>"
      },
      "unlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1126,
        1134
       ],
       "fqname": "apidoc.path.Path.unlink",
       "doc": "Remove this file or link.\nIf the path is a directory, use rmdir() instead."
      },
      "_flavour": {
       "type": "value",
       "value": "<pathlib._PosixFlavour object at 0x101131780>"
      },
      "as_posix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        635,
        640
       ],
       "fqname": "apidoc.path.Path.as_posix",
       "doc": "Return the string representation of the path with forward (/)\nslashes."
      },
      "_raw_open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        }
       ],
       "type": "function",
       "lines": [
        946,
        954
       ],
       "fqname": "apidoc.path.Path._raw_open",
       "doc": "Open the file pointed by this path and return a file descriptor,\nas os.open() does."
      },
      "_make_child_relpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "part",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        925,
        930
       ],
       "fqname": "apidoc.path.Path._make_child_relpath",
       "doc": null
      },
      "stat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1040,
        1046
       ],
       "fqname": "apidoc.path.Path.stat",
       "doc": "Return the result of the stat() system call on this path, like\nos.stat() does."
      },
      "root": {
       "type": "value",
       "value": "<property object at 0x1011462c8>"
      },
      "_cparts": {
       "type": "value",
       "value": "<property object at 0x101146228>"
      },
      "lchmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1117,
        1125
       ],
       "fqname": "apidoc.path.Path.lchmod",
       "doc": "Like chmod(), except if the path points to a symlink, the symlink's\npermissions are changed, rather than its target's."
      },
      "name": {
       "type": "value",
       "value": "<property object at 0x101146368>"
      },
      "anchor": {
       "type": "value",
       "value": "<property object at 0x101146318>"
      },
      "_opener": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        }
       ],
       "type": "function",
       "lines": [
        942,
        945
       ],
       "fqname": "apidoc.path.Path._opener",
       "doc": null
      },
      "lstat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1143,
        1151
       ],
       "fqname": "apidoc.path.Path.lstat",
       "doc": "Like stat(), except if the path points to a symlink, the symlink's\nstatus information is returned, rather than its target's."
      },
      "_closed": {
       "type": "value",
       "value": "<member '_closed' of 'Path' objects>"
      },
      "open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "'r'"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "buffering",
         "annotation": null,
         "default": "-1"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "encoding",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "errors",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "newline",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        1061,
        1071
       ],
       "fqname": "apidoc.path.Path.open",
       "doc": "Open the file pointed by this path and return a file object, as\nthe built-in open() function does."
      },
      "chmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1109,
        1116
       ],
       "fqname": "apidoc.path.Path.chmod",
       "doc": "Change the permissions of the path, like os.chmod()."
      },
      "with_name": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        748,
        754
       ],
       "fqname": "apidoc.path.Path.with_name",
       "doc": "Return a new path with the file name changed."
      },
      "glob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        978,
        989
       ],
       "fqname": "apidoc.path.Path.glob",
       "doc": "Iterate over this subtree and yield all existing files (of any\nkind, including directories) matching the given pattern."
      },
      "_cached_cparts": {
       "type": "value",
       "value": "<member '_cached_cparts' of 'PurePath' objects>"
      },
      "_parse_args": {
       "type": "value",
       "value": "<bound method type._parse_args of <class 'apidoc.path.Path'>>"
      },
      "is_absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        848,
        854
       ],
       "fqname": "apidoc.path.Path.is_absolute",
       "doc": "True if the path is absolute (has both a root and, if applicable,\na drive)."
      },
      "_drv": {
       "type": "value",
       "value": "<member '_drv' of 'PurePath' objects>"
      },
      "is_reserved": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        855,
        859
       ],
       "fqname": "apidoc.path.Path.is_reserved",
       "doc": "Return True if the path contains one of the special names reserved\nby the system, if any."
      },
      "owner": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1047,
        1053
       ],
       "fqname": "apidoc.path.Path.owner",
       "doc": "Return the login name of the file owner."
      },
      "with_suffix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "suffix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        25,
        37
       ],
       "fqname": "apidoc.path.Path.with_suffix",
       "doc": "@todo\n  This hopefully will not be needed when the base method is fixed."
      },
      "_accessor": {
       "type": "value",
       "value": "<member '_accessor' of 'Path' objects>"
      },
      "_from_parsed_parts": {
       "type": "value",
       "value": "<bound method type._from_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "touch": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "exist_ok",
         "annotation": null,
         "default": "True"
        }
       ],
       "type": "function",
       "lines": [
        1072,
        1094
       ],
       "fqname": "apidoc.path.Path.touch",
       "doc": "Create this file with the given access mode, if it doesn't exist."
      },
      "_pparts": {
       "type": "value",
       "value": "<member '_pparts' of 'PurePath' objects>"
      },
      "relative_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "other",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        775,
        806
       ],
       "fqname": "apidoc.path.Path.relative_to",
       "doc": "Return the relative path to another path identified by the passed\narguments.  If the operation is not possible (because this is not\na subpath of the other path), raise ValueError."
      },
      "_root": {
       "type": "value",
       "value": "<member '_root' of 'PurePath' objects>"
      },
      "absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1002,
        1019
       ],
       "fqname": "apidoc.path.Path.absolute",
       "doc": "Return an absolute version of this path.  This function works\neven if the path doesn't point to anything.\n\nNo normalization is done, i.e. all '.' and '..' will be kept along.\nUse resolve() to get the canonical path to a file."
      },
      "cwd": {
       "type": "value",
       "value": "<bound method type.cwd of <class 'apidoc.path.Path'>>"
      },
      "suffixes": {
       "type": "value",
       "value": "<property object at 0x101146408>"
      },
      "replace": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1160,
        1168
       ],
       "fqname": "apidoc.path.Path.replace",
       "doc": "Rename this path to the given path, clobbering the existing\ndestination if it exists."
      },
      "suffix": {
       "type": "value",
       "value": "<property object at 0x1011463b8>"
      },
      "stem": {
       "type": "value",
       "value": "<property object at 0x101146458>"
      },
      "is_file": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1205,
        1218
       ],
       "fqname": "apidoc.path.Path.is_file",
       "doc": "Whether this path is a regular file (also True for symlinks pointing\nto regular files)."
      },
      "_from_parts": {
       "type": "value",
       "value": "<bound method type._from_parts of <class 'apidoc.path.Path'>>"
      }
     },
     "type": "class",
     "bases": [
      "PosixPath"
     ],
     "lines": [
      16,
      41
     ]
    },
    "logging": {
     "name": "logging",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py",
     "fqname": "apidoc.path.logging"
    },
    "pathlib": {
     "name": "pathlib",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/pathlib.py",
     "fqname": "apidoc.path.pathlib"
    }
   },
   "name": "apidoc.path",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/path.py"
  },
  "htmlgen": {
   "doc": null,
   "fqname": "apidoc.htmlgen",
   "dict": {
    "DIV": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.DIV",
     "doc": null
    },
    "OL": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.OL",
     "doc": null
    },
    "STYLE": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.STYLE",
     "doc": null
    },
    "A": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.A",
     "doc": null
    },
    "HTML": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.HTML",
     "doc": null
    },
    "EM": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.EM",
     "doc": null
    },
    "format_tag": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": "{}"
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "close",
       "annotation": null,
       "default": "False"
      }
     ],
     "type": "function",
     "lines": [
      13,
      22
     ],
     "fqname": "apidoc.htmlgen.format_tag",
     "doc": null
    },
    "_elements": {
     "type": "value",
     "value": "(<function _make_element.<locals>.El at 0x1013252f0>, <function _make_element.<locals>.El at 0x10137bf28>, <function _make_element.<locals>.El at 0x1013a2048>, <function _make_element.<locals>.El at 0x1013a20d0>, <function _make_element.<locals>.El at 0x1013a2158>, <function _make_element.<locals>.El at 0x1013a21e0>, <function _make_element.<locals>.El at 0x1013a2268>, <function _make_element.<locals>.El at 0x1013a22f0>, <function _make_element.<locals>.El at 0x1013a2378>, <function _make_element.<locals>.El at 0x1013a2400>, <function _make_element.<locals>.El at 0x1013a2488>, <function _make_element.<locals>.El at 0x1013a2510>, <function _make_element.<locals>.El at 0x1013a2598>, <function _make_element.<locals>.El at 0x1013a2620>, <function _make_element.<locals>.El at 0x1013a26a8>, <function _make_element.<locals>.El at 0x1013a2730>, <function _make_element.<locals>.El at 0x1013a27b8>)"
    },
    "LINK": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.LINK",
     "doc": null
    },
    "BODY": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.BODY",
     "doc": null
    },
    "LI": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.LI",
     "doc": null
    },
    "SPAN": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.SPAN",
     "doc": null
    },
    "Element": {
     "doc": null,
     "mro": [
      "Element",
      "object"
     ],
     "fqname": "apidoc.htmlgen.Element",
     "dict": {
      "children": {
       "type": "value",
       "value": "<property object at 0x10131c818>"
      },
      "attrs": {
       "type": "value",
       "value": "<property object at 0x10136e4a8>"
      },
      "format": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "terminator",
         "annotation": null,
         "default": "'\\n'"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "indent",
         "annotation": null,
         "default": "' '"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "depth",
         "annotation": null,
         "default": "0"
        }
       ],
       "type": "function",
       "lines": [
        72,
        74
       ],
       "fqname": "apidoc.htmlgen.Element.format",
       "doc": null
      },
      "generate": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "terminator",
         "annotation": null,
         "default": "''"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "indent",
         "annotation": null,
         "default": "''"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "depth",
         "annotation": null,
         "default": "0"
        }
       ],
       "type": "function",
       "lines": [
        61,
        70
       ],
       "fqname": "apidoc.htmlgen.Element.generate",
       "doc": null
      }
     },
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      24,
      74
     ]
    },
    "TITLE": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.TITLE",
     "doc": null
    },
    "_make_element": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "tag",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      79,
      85
     ],
     "fqname": "apidoc.htmlgen._make_element",
     "doc": null
    },
    "html": {
     "name": "html",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/html/__init__.py",
     "fqname": "apidoc.htmlgen.html"
    },
    "P": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.P",
     "doc": null
    },
    "HEAD": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.HEAD",
     "doc": null
    },
    "UL": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.UL",
     "doc": null
    },
    "PRE": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.PRE",
     "doc": null
    },
    "terminate": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "terminator",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "strings",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      6,
      11
     ],
     "fqname": "apidoc.htmlgen.terminate",
     "doc": null
    },
    "functools": {
     "name": "functools",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/functools.py",
     "fqname": "apidoc.htmlgen.functools"
    },
    "IMG": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.IMG",
     "doc": null
    },
    "SCRIPT": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.htmlgen.SCRIPT",
     "doc": null
    }
   },
   "name": "apidoc.htmlgen",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/htmlgen.py"
  },
  "base": {
   "doc": null,
   "fqname": "apidoc.base",
   "dict": {
    "UNDEFINED": {
     "type": "value",
     "value": "Token('UNDEFINED')"
    },
    "Token": {
     "doc": null,
     "mro": [
      "Token",
      "object"
     ],
     "fqname": "apidoc.base.Token",
     "dict": {},
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      7,
      38
     ]
    },
    "format_ctor": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "obj",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_POSITIONAL",
       "name": "args",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "kw_args",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      61,
      66
     ],
     "fqname": "apidoc.base.format_ctor",
     "doc": null
    },
    "BaseStruct": {
     "doc": null,
     "mro": [
      "BaseStruct",
      "object"
     ],
     "fqname": "apidoc.base.BaseStruct",
     "dict": {
      "copy": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_KEYWORD",
         "name": "kw_args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        86,
        90
       ],
       "fqname": "apidoc.base.BaseStruct.copy",
       "doc": null
      }
     },
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      68,
      90
     ]
    },
    "inspect": {
     "name": "inspect",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/inspect.py",
     "fqname": "apidoc.base.inspect"
    },
    "Struct": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "names",
       "annotation": null,
       "default": null
      },
      {
       "kind": "KEYWORD_ONLY",
       "name": "name",
       "annotation": null,
       "default": "'Struct'"
      }
     ],
     "type": "function",
     "lines": [
      93,
      96
     ],
     "fqname": "apidoc.base.Struct",
     "doc": null
    },
    "log_call": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "log",
       "annotation": null,
       "default": "<function debug at 0x100787730>"
      }
     ],
     "type": "function",
     "lines": [
      43,
      59
     ],
     "fqname": "apidoc.base.log_call",
     "doc": null
    },
    "logging": {
     "name": "logging",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py",
     "fqname": "apidoc.base.logging"
    },
    "ChainMap": {
     "doc": "A ChainMap groups multiple dicts (or other mappings) together\nto create a single, updateable view.\n\nThe underlying mappings are stored in a list.  That list is public and can\naccessed or updated using the *maps* attribute.  There is no other state.\n\nLookups search the underlying mappings successively until a key is found.\nIn contrast, writes, updates, and deletions only operate on the first\nmapping.",
     "mro": [
      "ChainMap",
      "MutableMapping",
      "Mapping",
      "Sized",
      "Iterable",
      "Container",
      "object"
     ],
     "fqname": "apidoc.base.ChainMap",
     "dict": {
      "_MutableMapping__marker": {
       "type": "value",
       "value": "<object object at 0x1003b5040>"
      },
      "new_child": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "m",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        822,
        830
       ],
       "fqname": "apidoc.base.ChainMap.new_child",
       "doc": "New ChainMap with a new map followed by all previous maps. If no\nmap is provided, an empty dict is used."
      },
      "_abc_registry": {
       "type": "value",
       "value": "<_weakrefset.WeakSet object at 0x100678be0>"
      },
      "_abc_negative_cache": {
       "type": "value",
       "value": "<_weakrefset.WeakSet object at 0x100683eb8>"
      },
      "update": {
       "parameters": [
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_KEYWORD",
         "name": "kwds",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        562,
        587
       ],
       "fqname": "apidoc.base.ChainMap.update",
       "doc": "D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.\nIf E present and has a .keys() method, does:     for k in E: D[k] = E[k]\nIf E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v\nIn either case, this is followed by: for k, v in F.items(): D[k] = v"
      },
      "copy": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        816,
        819
       ],
       "fqname": "apidoc.base.ChainMap.copy",
       "doc": "New ChainMap or subclass with a new copy of maps[0] and refs to maps[1:]"
      },
      "items": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        422,
        425
       ],
       "fqname": "apidoc.base.ChainMap.items",
       "doc": "D.items() -> a set-like object providing a view on D's items"
      },
      "_abc_cache": {
       "type": "value",
       "value": "<_weakrefset.WeakSet object at 0x100683e80>"
      },
      "keys": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        418,
        421
       ],
       "fqname": "apidoc.base.ChainMap.keys",
       "doc": "D.keys() -> a set-like object providing a view on D's keys"
      },
      "setdefault": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "key",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "default",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        588,
        595
       ],
       "fqname": "apidoc.base.ChainMap.setdefault",
       "doc": "D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D"
      },
      "fromkeys": {
       "type": "value",
       "value": "<bound method ABCMeta.fromkeys of <class 'collections.ChainMap'>>"
      },
      "values": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        426,
        429
       ],
       "fqname": "apidoc.base.ChainMap.values",
       "doc": "D.values() -> an object providing a view on D's values"
      },
      "parents": {
       "type": "value",
       "value": "<property object at 0x100689e58>"
      },
      "_abc_negative_cache_version": {
       "type": "value",
       "value": "23"
      },
      "popitem": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        845,
        851
       ],
       "fqname": "apidoc.base.ChainMap.popitem",
       "doc": "Remove and return an item pair from maps[0]. Raise KeyError is maps[0] is empty."
      },
      "clear": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        859,
        862
       ],
       "fqname": "apidoc.base.ChainMap.clear",
       "doc": "Clear maps[0], leaving maps[1:] intact."
      },
      "pop": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "key",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        852,
        858
       ],
       "fqname": "apidoc.base.ChainMap.pop",
       "doc": "Remove *key* from maps[0] and return its value. Raise KeyError if *key* not in maps[0]."
      },
      "get": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "key",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "default",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        791,
        793
       ],
       "fqname": "apidoc.base.ChainMap.get",
       "doc": null
      }
     },
     "type": "class",
     "bases": [
      "MutableMapping"
     ],
     "lines": [
      760,
      862
     ]
    }
   },
   "name": "apidoc.base",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/base.py"
  },
  "generate": {
   "doc": null,
   "fqname": "apidoc.generate",
   "dict": {
    "gen_function": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "function",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      68,
      71
     ],
     "fqname": "apidoc.generate.gen_function",
     "doc": null
    },
    "DIV": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.DIV",
     "doc": null
    },
    "get_relative_path": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name0",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name1",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      26,
      34
     ],
     "fqname": "apidoc.generate.get_relative_path",
     "doc": null
    },
    "OL": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.OL",
     "doc": null
    },
    "STYLE": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.STYLE",
     "doc": null
    },
    "A": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.A",
     "doc": null
    },
    "base": {
     "name": "apidoc.base",
     "type": "module",
     "path": "/Users/samuel/dev/apidoc/src/python/apidoc/base.py",
     "fqname": "apidoc.generate.base"
    },
    "HTML": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.HTML",
     "doc": null
    },
    "EM": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.EM",
     "doc": null
    },
    "Name": {
     "doc": "The fully-qualified name of a Python object.",
     "mro": [
      "Name",
      "object"
     ],
     "fqname": "apidoc.generate.Name",
     "dict": {
      "base": {
       "type": "value",
       "value": "<property object at 0x10077d818>"
      },
      "parent": {
       "type": "value",
       "value": "<property object at 0x10077dae8>"
      }
     },
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      14,
      76
     ]
    },
    "generate_module": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      108
     ],
     "fqname": "apidoc.generate.generate_module",
     "doc": null
    },
    "wrap_document": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_POSITIONAL",
       "name": "body",
       "annotation": null,
       "default": null
      },
      {
       "kind": "KEYWORD_ONLY",
       "name": "title",
       "annotation": null,
       "default": "None"
      }
     ],
     "type": "function",
     "lines": [
      12,
      20
     ],
     "fqname": "apidoc.generate.wrap_document",
     "doc": null
    },
    "LINK": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.LINK",
     "doc": null
    },
    "BODY": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.BODY",
     "doc": null
    },
    "LI": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.LI",
     "doc": null
    },
    "write_module_files": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "modules",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "dir",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      125,
      148
     ],
     "fqname": "apidoc.generate.write_module_files",
     "doc": null
    },
    "shutil": {
     "name": "shutil",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/shutil.py",
     "fqname": "apidoc.generate.shutil"
    },
    "gen_class": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "class_",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      73,
      76
     ],
     "fqname": "apidoc.generate.gen_class",
     "doc": null
    },
    "SPAN": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.SPAN",
     "doc": null
    },
    "Element": {
     "doc": null,
     "mro": [
      "Element",
      "object"
     ],
     "fqname": "apidoc.generate.Element",
     "dict": {
      "children": {
       "type": "value",
       "value": "<property object at 0x10131c908>"
      },
      "attrs": {
       "type": "value",
       "value": "<property object at 0x1013234f8>"
      },
      "format": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "terminator",
         "annotation": null,
         "default": "'\\n'"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "indent",
         "annotation": null,
         "default": "' '"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "depth",
         "annotation": null,
         "default": "0"
        }
       ],
       "type": "function",
       "lines": [
        72,
        74
       ],
       "fqname": "apidoc.generate.Element.format",
       "doc": null
      },
      "generate": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "terminator",
         "annotation": null,
         "default": "''"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "indent",
         "annotation": null,
         "default": "''"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "depth",
         "annotation": null,
         "default": "0"
        }
       ],
       "type": "function",
       "lines": [
        61,
        70
       ],
       "fqname": "apidoc.generate.Element.generate",
       "doc": null
      }
     },
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      24,
      74
     ]
    },
    "TITLE": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.TITLE",
     "doc": null
    },
    "make_module_link": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "from_name",
       "annotation": null,
       "default": "None"
      }
     ],
     "type": "function",
     "lines": [
      36,
      39
     ],
     "fqname": "apidoc.generate.make_module_link",
     "doc": null
    },
    "gen_module": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "module",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      57,
      66
     ],
     "fqname": "apidoc.generate.gen_module",
     "doc": null
    },
    "P": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.P",
     "doc": null
    },
    "gen": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "info",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      51,
      55
     ],
     "fqname": "apidoc.generate.gen",
     "doc": null
    },
    "gen_doc": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "doc",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      22,
      24
     ],
     "fqname": "apidoc.generate.gen_doc",
     "doc": null
    },
    "HEAD": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.HEAD",
     "doc": null
    },
    "logging": {
     "name": "logging",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py",
     "fqname": "apidoc.generate.logging"
    },
    "UL": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.UL",
     "doc": null
    },
    "PRE": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.PRE",
     "doc": null
    },
    "pathlib": {
     "name": "pathlib",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/pathlib.py",
     "fqname": "apidoc.generate.pathlib"
    },
    "write_module_file": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "ctx",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      110,
      123
     ],
     "fqname": "apidoc.generate.write_module_file",
     "doc": null
    },
    "SCRIPT": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.SCRIPT",
     "doc": null
    },
    "Path": {
     "doc": null,
     "mro": [
      "Path",
      "PosixPath",
      "Path",
      "PurePosixPath",
      "PurePath",
      "object"
     ],
     "fqname": "apidoc.generate.Path",
     "dict": {
      "_make_child": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        619,
        624
       ],
       "fqname": "apidoc.generate.Path._make_child",
       "doc": null
      },
      "is_char_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1244,
        1256
       ],
       "fqname": "apidoc.generate.Path.is_char_device",
       "doc": "Whether this path is a character device."
      },
      "mkdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "parents",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1095,
        1108
       ],
       "fqname": "apidoc.generate.Path.mkdir",
       "doc": null
      },
      "rglob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        990,
        1001
       ],
       "fqname": "apidoc.generate.Path.rglob",
       "doc": "Recursively yield all existing files (of any kind, including\ndirectories) matching the given pattern, anywhere in this subtree."
      },
      "resolve": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1020,
        1039
       ],
       "fqname": "apidoc.generate.Path.resolve",
       "doc": "Make the path absolute, resolving all symlinks on the way and also\nnormalizing it (for example turning slashes into backslashes under\nWindows)."
      },
      "joinpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        819,
        826
       ],
       "fqname": "apidoc.generate.Path.joinpath",
       "doc": "Combine this path with one or several arguments, and return a\nnew path representing either a subpath (if all arguments are relative\npaths) or a totally different path (if one of the arguments is\nanchored)."
      },
      "_str": {
       "type": "value",
       "value": "<member '_str' of 'PurePath' objects>"
      },
      "exists": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1180,
        1191
       ],
       "fqname": "apidoc.generate.Path.exists",
       "doc": "Whether this path exists."
      },
      "is_socket": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1270,
        1282
       ],
       "fqname": "apidoc.generate.Path.is_socket",
       "doc": "Whether this path is a socket."
      },
      "symlink_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target_is_directory",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1169,
        1177
       ],
       "fqname": "apidoc.generate.Path.symlink_to",
       "doc": "Make this path a symlink pointing to the given path.\nNote the order of arguments (self, target) is the reverse of os.symlink's."
      },
      "rmdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1135,
        1142
       ],
       "fqname": "apidoc.generate.Path.rmdir",
       "doc": "Remove this directory.  The directory must be empty."
      },
      "parents": {
       "type": "value",
       "value": "<property object at 0x101146548>"
      },
      "parent": {
       "type": "value",
       "value": "<property object at 0x1011464f8>"
      },
      "is_dir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1192,
        1204
       ],
       "fqname": "apidoc.generate.Path.is_dir",
       "doc": "Whether this path is a directory."
      },
      "is_block_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1231,
        1243
       ],
       "fqname": "apidoc.generate.Path.is_block_device",
       "doc": "Whether this path is a block device."
      },
      "group": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1054,
        1060
       ],
       "fqname": "apidoc.generate.Path.group",
       "doc": "Return the group name of the file gid."
      },
      "_format_parsed_parts": {
       "type": "value",
       "value": "<bound method type._format_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "_init": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "template",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        915,
        924
       ],
       "fqname": "apidoc.generate.Path._init",
       "doc": null
      },
      "as_uri": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        649,
        654
       ],
       "fqname": "apidoc.generate.Path.as_uri",
       "doc": "Return the path as a 'file' URI."
      },
      "_parts": {
       "type": "value",
       "value": "<member '_parts' of 'PurePath' objects>"
      },
      "rename": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1152,
        1159
       ],
       "fqname": "apidoc.generate.Path.rename",
       "doc": "Rename this path to the given path."
      },
      "is_fifo": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1257,
        1269
       ],
       "fqname": "apidoc.generate.Path.is_fifo",
       "doc": "Whether this path is a FIFO."
      },
      "_hash": {
       "type": "value",
       "value": "<member '_hash' of 'PurePath' objects>"
      },
      "starts_with": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "prefix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        39,
        41
       ],
       "fqname": "apidoc.generate.Path.starts_with",
       "doc": null
      },
      "iterdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        964,
        977
       ],
       "fqname": "apidoc.generate.Path.iterdir",
       "doc": "Iterate over the files in this directory.  Does not yield any\nresult for the special paths '.' and '..'."
      },
      "drive": {
       "type": "value",
       "value": "<property object at 0x101146278>"
      },
      "match": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path_pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        860,
        884
       ],
       "fqname": "apidoc.generate.Path.match",
       "doc": "Return True if this path matches the given pattern."
      },
      "is_symlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1219,
        1230
       ],
       "fqname": "apidoc.generate.Path.is_symlink",
       "doc": "Whether this path is a symbolic link."
      },
      "_raise_closed": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        939,
        941
       ],
       "fqname": "apidoc.generate.Path._raise_closed",
       "doc": null
      },
      "parts": {
       "type": "value",
       "value": "<property object at 0x1011464a8>"
      },
      "unlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1126,
        1134
       ],
       "fqname": "apidoc.generate.Path.unlink",
       "doc": "Remove this file or link.\nIf the path is a directory, use rmdir() instead."
      },
      "_flavour": {
       "type": "value",
       "value": "<pathlib._PosixFlavour object at 0x101131780>"
      },
      "as_posix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        635,
        640
       ],
       "fqname": "apidoc.generate.Path.as_posix",
       "doc": "Return the string representation of the path with forward (/)\nslashes."
      },
      "_raw_open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        }
       ],
       "type": "function",
       "lines": [
        946,
        954
       ],
       "fqname": "apidoc.generate.Path._raw_open",
       "doc": "Open the file pointed by this path and return a file descriptor,\nas os.open() does."
      },
      "_make_child_relpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "part",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        925,
        930
       ],
       "fqname": "apidoc.generate.Path._make_child_relpath",
       "doc": null
      },
      "stat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1040,
        1046
       ],
       "fqname": "apidoc.generate.Path.stat",
       "doc": "Return the result of the stat() system call on this path, like\nos.stat() does."
      },
      "root": {
       "type": "value",
       "value": "<property object at 0x1011462c8>"
      },
      "_cparts": {
       "type": "value",
       "value": "<property object at 0x101146228>"
      },
      "lchmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1117,
        1125
       ],
       "fqname": "apidoc.generate.Path.lchmod",
       "doc": "Like chmod(), except if the path points to a symlink, the symlink's\npermissions are changed, rather than its target's."
      },
      "name": {
       "type": "value",
       "value": "<property object at 0x101146368>"
      },
      "anchor": {
       "type": "value",
       "value": "<property object at 0x101146318>"
      },
      "_opener": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        }
       ],
       "type": "function",
       "lines": [
        942,
        945
       ],
       "fqname": "apidoc.generate.Path._opener",
       "doc": null
      },
      "lstat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1143,
        1151
       ],
       "fqname": "apidoc.generate.Path.lstat",
       "doc": "Like stat(), except if the path points to a symlink, the symlink's\nstatus information is returned, rather than its target's."
      },
      "_closed": {
       "type": "value",
       "value": "<member '_closed' of 'Path' objects>"
      },
      "open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "'r'"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "buffering",
         "annotation": null,
         "default": "-1"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "encoding",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "errors",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "newline",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        1061,
        1071
       ],
       "fqname": "apidoc.generate.Path.open",
       "doc": "Open the file pointed by this path and return a file object, as\nthe built-in open() function does."
      },
      "chmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1109,
        1116
       ],
       "fqname": "apidoc.generate.Path.chmod",
       "doc": "Change the permissions of the path, like os.chmod()."
      },
      "with_name": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        748,
        754
       ],
       "fqname": "apidoc.generate.Path.with_name",
       "doc": "Return a new path with the file name changed."
      },
      "glob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        978,
        989
       ],
       "fqname": "apidoc.generate.Path.glob",
       "doc": "Iterate over this subtree and yield all existing files (of any\nkind, including directories) matching the given pattern."
      },
      "_cached_cparts": {
       "type": "value",
       "value": "<member '_cached_cparts' of 'PurePath' objects>"
      },
      "_parse_args": {
       "type": "value",
       "value": "<bound method type._parse_args of <class 'apidoc.path.Path'>>"
      },
      "is_absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        848,
        854
       ],
       "fqname": "apidoc.generate.Path.is_absolute",
       "doc": "True if the path is absolute (has both a root and, if applicable,\na drive)."
      },
      "_drv": {
       "type": "value",
       "value": "<member '_drv' of 'PurePath' objects>"
      },
      "is_reserved": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        855,
        859
       ],
       "fqname": "apidoc.generate.Path.is_reserved",
       "doc": "Return True if the path contains one of the special names reserved\nby the system, if any."
      },
      "owner": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1047,
        1053
       ],
       "fqname": "apidoc.generate.Path.owner",
       "doc": "Return the login name of the file owner."
      },
      "with_suffix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "suffix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        25,
        37
       ],
       "fqname": "apidoc.generate.Path.with_suffix",
       "doc": "@todo\n  This hopefully will not be needed when the base method is fixed."
      },
      "_accessor": {
       "type": "value",
       "value": "<member '_accessor' of 'Path' objects>"
      },
      "_from_parsed_parts": {
       "type": "value",
       "value": "<bound method type._from_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "touch": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "exist_ok",
         "annotation": null,
         "default": "True"
        }
       ],
       "type": "function",
       "lines": [
        1072,
        1094
       ],
       "fqname": "apidoc.generate.Path.touch",
       "doc": "Create this file with the given access mode, if it doesn't exist."
      },
      "_pparts": {
       "type": "value",
       "value": "<member '_pparts' of 'PurePath' objects>"
      },
      "relative_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "other",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        775,
        806
       ],
       "fqname": "apidoc.generate.Path.relative_to",
       "doc": "Return the relative path to another path identified by the passed\narguments.  If the operation is not possible (because this is not\na subpath of the other path), raise ValueError."
      },
      "_root": {
       "type": "value",
       "value": "<member '_root' of 'PurePath' objects>"
      },
      "absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1002,
        1019
       ],
       "fqname": "apidoc.generate.Path.absolute",
       "doc": "Return an absolute version of this path.  This function works\neven if the path doesn't point to anything.\n\nNo normalization is done, i.e. all '.' and '..' will be kept along.\nUse resolve() to get the canonical path to a file."
      },
      "cwd": {
       "type": "value",
       "value": "<bound method type.cwd of <class 'apidoc.path.Path'>>"
      },
      "suffixes": {
       "type": "value",
       "value": "<property object at 0x101146408>"
      },
      "replace": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1160,
        1168
       ],
       "fqname": "apidoc.generate.Path.replace",
       "doc": "Rename this path to the given path, clobbering the existing\ndestination if it exists."
      },
      "suffix": {
       "type": "value",
       "value": "<property object at 0x1011463b8>"
      },
      "stem": {
       "type": "value",
       "value": "<property object at 0x101146458>"
      },
      "is_file": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1205,
        1218
       ],
       "fqname": "apidoc.generate.Path.is_file",
       "doc": "Whether this path is a regular file (also True for symlinks pointing\nto regular files)."
      },
      "_from_parts": {
       "type": "value",
       "value": "<bound method type._from_parts of <class 'apidoc.path.Path'>>"
      }
     },
     "type": "class",
     "bases": [
      "PosixPath"
     ],
     "lines": [
      16,
      41
     ]
    },
    "IMG": {
     "parameters": [
      {
       "kind": "VAR_POSITIONAL",
       "name": "children",
       "annotation": null,
       "default": null
      },
      {
       "kind": "VAR_KEYWORD",
       "name": "attrs",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      80,
      82
     ],
     "fqname": "apidoc.generate.IMG",
     "doc": null
    },
    "Context": {
     "doc": null,
     "mro": [
      "Context",
      "Struct",
      "BaseStruct",
      "object"
     ],
     "fqname": "apidoc.generate.Context",
     "dict": {
      "copy": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_KEYWORD",
         "name": "kw_args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        86,
        90
       ],
       "fqname": "apidoc.generate.Context.copy",
       "doc": null
      },
      "name": {
       "type": "value",
       "value": "<member 'name' of 'Struct' objects>"
      },
      "modules": {
       "type": "value",
       "value": "<member 'modules' of 'Struct' objects>"
      }
     },
     "type": "class",
     "bases": [
      "Struct"
     ],
     "lines": [
      43,
      48
     ]
    }
   },
   "name": "apidoc.generate",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/generate.py"
  },
  "inspector": {
   "doc": null,
   "fqname": "apidoc.inspector",
   "dict": {
    "is_special_symbol": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "symbol",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      17,
      19
     ],
     "fqname": "apidoc.inspector.is_special_symbol",
     "doc": null
    },
    "_MODULE_TYPE": {
     "type": "class"
    },
    "_get_lines": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "obj",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      40,
      47
     ],
     "fqname": "apidoc.inspector._get_lines",
     "doc": null
    },
    "_inspect_class": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "context",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "fqname",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "class_",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      112,
      130
     ],
     "fqname": "apidoc.inspector._inspect_class",
     "doc": null
    },
    "_inspect_package_or_module": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "context",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "fqname",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "module",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      70,
      100
     ],
     "fqname": "apidoc.inspector._inspect_package_or_module",
     "doc": null
    },
    "inspect_package": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "context",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      102,
      110
     ],
     "fqname": "apidoc.inspector.inspect_package",
     "doc": null
    },
    "_inspect_module": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "context",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "fqname",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "module",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      61,
      68
     ],
     "fqname": "apidoc.inspector._inspect_module",
     "doc": null
    },
    "Path": {
     "doc": null,
     "mro": [
      "Path",
      "PosixPath",
      "Path",
      "PurePosixPath",
      "PurePath",
      "object"
     ],
     "fqname": "apidoc.inspector.Path",
     "dict": {
      "_make_child": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        619,
        624
       ],
       "fqname": "apidoc.inspector.Path._make_child",
       "doc": null
      },
      "is_char_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1244,
        1256
       ],
       "fqname": "apidoc.inspector.Path.is_char_device",
       "doc": "Whether this path is a character device."
      },
      "mkdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "parents",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1095,
        1108
       ],
       "fqname": "apidoc.inspector.Path.mkdir",
       "doc": null
      },
      "rglob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        990,
        1001
       ],
       "fqname": "apidoc.inspector.Path.rglob",
       "doc": "Recursively yield all existing files (of any kind, including\ndirectories) matching the given pattern, anywhere in this subtree."
      },
      "resolve": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1020,
        1039
       ],
       "fqname": "apidoc.inspector.Path.resolve",
       "doc": "Make the path absolute, resolving all symlinks on the way and also\nnormalizing it (for example turning slashes into backslashes under\nWindows)."
      },
      "joinpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        819,
        826
       ],
       "fqname": "apidoc.inspector.Path.joinpath",
       "doc": "Combine this path with one or several arguments, and return a\nnew path representing either a subpath (if all arguments are relative\npaths) or a totally different path (if one of the arguments is\nanchored)."
      },
      "_str": {
       "type": "value",
       "value": "<member '_str' of 'PurePath' objects>"
      },
      "exists": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1180,
        1191
       ],
       "fqname": "apidoc.inspector.Path.exists",
       "doc": "Whether this path exists."
      },
      "is_socket": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1270,
        1282
       ],
       "fqname": "apidoc.inspector.Path.is_socket",
       "doc": "Whether this path is a socket."
      },
      "symlink_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target_is_directory",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1169,
        1177
       ],
       "fqname": "apidoc.inspector.Path.symlink_to",
       "doc": "Make this path a symlink pointing to the given path.\nNote the order of arguments (self, target) is the reverse of os.symlink's."
      },
      "rmdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1135,
        1142
       ],
       "fqname": "apidoc.inspector.Path.rmdir",
       "doc": "Remove this directory.  The directory must be empty."
      },
      "parents": {
       "type": "value",
       "value": "<property object at 0x101146548>"
      },
      "parent": {
       "type": "value",
       "value": "<property object at 0x1011464f8>"
      },
      "is_dir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1192,
        1204
       ],
       "fqname": "apidoc.inspector.Path.is_dir",
       "doc": "Whether this path is a directory."
      },
      "is_block_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1231,
        1243
       ],
       "fqname": "apidoc.inspector.Path.is_block_device",
       "doc": "Whether this path is a block device."
      },
      "group": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1054,
        1060
       ],
       "fqname": "apidoc.inspector.Path.group",
       "doc": "Return the group name of the file gid."
      },
      "_format_parsed_parts": {
       "type": "value",
       "value": "<bound method type._format_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "_init": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "template",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        915,
        924
       ],
       "fqname": "apidoc.inspector.Path._init",
       "doc": null
      },
      "as_uri": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        649,
        654
       ],
       "fqname": "apidoc.inspector.Path.as_uri",
       "doc": "Return the path as a 'file' URI."
      },
      "_parts": {
       "type": "value",
       "value": "<member '_parts' of 'PurePath' objects>"
      },
      "rename": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1152,
        1159
       ],
       "fqname": "apidoc.inspector.Path.rename",
       "doc": "Rename this path to the given path."
      },
      "is_fifo": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1257,
        1269
       ],
       "fqname": "apidoc.inspector.Path.is_fifo",
       "doc": "Whether this path is a FIFO."
      },
      "_hash": {
       "type": "value",
       "value": "<member '_hash' of 'PurePath' objects>"
      },
      "starts_with": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "prefix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        39,
        41
       ],
       "fqname": "apidoc.inspector.Path.starts_with",
       "doc": null
      },
      "iterdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        964,
        977
       ],
       "fqname": "apidoc.inspector.Path.iterdir",
       "doc": "Iterate over the files in this directory.  Does not yield any\nresult for the special paths '.' and '..'."
      },
      "drive": {
       "type": "value",
       "value": "<property object at 0x101146278>"
      },
      "match": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path_pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        860,
        884
       ],
       "fqname": "apidoc.inspector.Path.match",
       "doc": "Return True if this path matches the given pattern."
      },
      "is_symlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1219,
        1230
       ],
       "fqname": "apidoc.inspector.Path.is_symlink",
       "doc": "Whether this path is a symbolic link."
      },
      "_raise_closed": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        939,
        941
       ],
       "fqname": "apidoc.inspector.Path._raise_closed",
       "doc": null
      },
      "parts": {
       "type": "value",
       "value": "<property object at 0x1011464a8>"
      },
      "unlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1126,
        1134
       ],
       "fqname": "apidoc.inspector.Path.unlink",
       "doc": "Remove this file or link.\nIf the path is a directory, use rmdir() instead."
      },
      "_flavour": {
       "type": "value",
       "value": "<pathlib._PosixFlavour object at 0x101131780>"
      },
      "as_posix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        635,
        640
       ],
       "fqname": "apidoc.inspector.Path.as_posix",
       "doc": "Return the string representation of the path with forward (/)\nslashes."
      },
      "_raw_open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        }
       ],
       "type": "function",
       "lines": [
        946,
        954
       ],
       "fqname": "apidoc.inspector.Path._raw_open",
       "doc": "Open the file pointed by this path and return a file descriptor,\nas os.open() does."
      },
      "_make_child_relpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "part",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        925,
        930
       ],
       "fqname": "apidoc.inspector.Path._make_child_relpath",
       "doc": null
      },
      "stat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1040,
        1046
       ],
       "fqname": "apidoc.inspector.Path.stat",
       "doc": "Return the result of the stat() system call on this path, like\nos.stat() does."
      },
      "root": {
       "type": "value",
       "value": "<property object at 0x1011462c8>"
      },
      "_cparts": {
       "type": "value",
       "value": "<property object at 0x101146228>"
      },
      "lchmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1117,
        1125
       ],
       "fqname": "apidoc.inspector.Path.lchmod",
       "doc": "Like chmod(), except if the path points to a symlink, the symlink's\npermissions are changed, rather than its target's."
      },
      "name": {
       "type": "value",
       "value": "<property object at 0x101146368>"
      },
      "anchor": {
       "type": "value",
       "value": "<property object at 0x101146318>"
      },
      "_opener": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        }
       ],
       "type": "function",
       "lines": [
        942,
        945
       ],
       "fqname": "apidoc.inspector.Path._opener",
       "doc": null
      },
      "lstat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1143,
        1151
       ],
       "fqname": "apidoc.inspector.Path.lstat",
       "doc": "Like stat(), except if the path points to a symlink, the symlink's\nstatus information is returned, rather than its target's."
      },
      "_closed": {
       "type": "value",
       "value": "<member '_closed' of 'Path' objects>"
      },
      "open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "'r'"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "buffering",
         "annotation": null,
         "default": "-1"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "encoding",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "errors",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "newline",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        1061,
        1071
       ],
       "fqname": "apidoc.inspector.Path.open",
       "doc": "Open the file pointed by this path and return a file object, as\nthe built-in open() function does."
      },
      "chmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1109,
        1116
       ],
       "fqname": "apidoc.inspector.Path.chmod",
       "doc": "Change the permissions of the path, like os.chmod()."
      },
      "with_name": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        748,
        754
       ],
       "fqname": "apidoc.inspector.Path.with_name",
       "doc": "Return a new path with the file name changed."
      },
      "glob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        978,
        989
       ],
       "fqname": "apidoc.inspector.Path.glob",
       "doc": "Iterate over this subtree and yield all existing files (of any\nkind, including directories) matching the given pattern."
      },
      "_cached_cparts": {
       "type": "value",
       "value": "<member '_cached_cparts' of 'PurePath' objects>"
      },
      "_parse_args": {
       "type": "value",
       "value": "<bound method type._parse_args of <class 'apidoc.path.Path'>>"
      },
      "is_absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        848,
        854
       ],
       "fqname": "apidoc.inspector.Path.is_absolute",
       "doc": "True if the path is absolute (has both a root and, if applicable,\na drive)."
      },
      "_drv": {
       "type": "value",
       "value": "<member '_drv' of 'PurePath' objects>"
      },
      "is_reserved": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        855,
        859
       ],
       "fqname": "apidoc.inspector.Path.is_reserved",
       "doc": "Return True if the path contains one of the special names reserved\nby the system, if any."
      },
      "owner": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1047,
        1053
       ],
       "fqname": "apidoc.inspector.Path.owner",
       "doc": "Return the login name of the file owner."
      },
      "with_suffix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "suffix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        25,
        37
       ],
       "fqname": "apidoc.inspector.Path.with_suffix",
       "doc": "@todo\n  This hopefully will not be needed when the base method is fixed."
      },
      "_accessor": {
       "type": "value",
       "value": "<member '_accessor' of 'Path' objects>"
      },
      "_from_parsed_parts": {
       "type": "value",
       "value": "<bound method type._from_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "touch": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "exist_ok",
         "annotation": null,
         "default": "True"
        }
       ],
       "type": "function",
       "lines": [
        1072,
        1094
       ],
       "fqname": "apidoc.inspector.Path.touch",
       "doc": "Create this file with the given access mode, if it doesn't exist."
      },
      "_pparts": {
       "type": "value",
       "value": "<member '_pparts' of 'PurePath' objects>"
      },
      "relative_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "other",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        775,
        806
       ],
       "fqname": "apidoc.inspector.Path.relative_to",
       "doc": "Return the relative path to another path identified by the passed\narguments.  If the operation is not possible (because this is not\na subpath of the other path), raise ValueError."
      },
      "_root": {
       "type": "value",
       "value": "<member '_root' of 'PurePath' objects>"
      },
      "absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1002,
        1019
       ],
       "fqname": "apidoc.inspector.Path.absolute",
       "doc": "Return an absolute version of this path.  This function works\neven if the path doesn't point to anything.\n\nNo normalization is done, i.e. all '.' and '..' will be kept along.\nUse resolve() to get the canonical path to a file."
      },
      "cwd": {
       "type": "value",
       "value": "<bound method type.cwd of <class 'apidoc.path.Path'>>"
      },
      "suffixes": {
       "type": "value",
       "value": "<property object at 0x101146408>"
      },
      "replace": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1160,
        1168
       ],
       "fqname": "apidoc.inspector.Path.replace",
       "doc": "Rename this path to the given path, clobbering the existing\ndestination if it exists."
      },
      "suffix": {
       "type": "value",
       "value": "<property object at 0x1011463b8>"
      },
      "stem": {
       "type": "value",
       "value": "<property object at 0x101146458>"
      },
      "is_file": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1205,
        1218
       ],
       "fqname": "apidoc.inspector.Path.is_file",
       "doc": "Whether this path is a regular file (also True for symlinks pointing\nto regular files)."
      },
      "_from_parts": {
       "type": "value",
       "value": "<bound method type._from_parts of <class 'apidoc.path.Path'>>"
      }
     },
     "type": "class",
     "bases": [
      "PosixPath"
     ],
     "lines": [
      16,
      41
     ]
    },
    "sys": {
     "name": "sys",
     "type": "module",
     "path": "None",
     "fqname": "apidoc.inspector.sys"
    },
    "logging": {
     "name": "logging",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py",
     "fqname": "apidoc.inspector.logging"
    },
    "inspect": {
     "name": "inspect",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/inspect.py",
     "fqname": "apidoc.inspector.inspect"
    },
    "functools": {
     "name": "functools",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/functools.py",
     "fqname": "apidoc.inspector.functools"
    },
    "_inspect_function": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "context",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "fqname",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "function",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      142,
      158
     ],
     "fqname": "apidoc.inspector._inspect_function",
     "doc": null
    },
    "os": {
     "name": "os",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/os.py",
     "fqname": "apidoc.inspector.os"
    },
    "_inspect": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "context",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "fqname",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "obj",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      160,
      172
     ],
     "fqname": "apidoc.inspector._inspect",
     "doc": null
    },
    "_inspect_parameter": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "parameter",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      132,
      140
     ],
     "fqname": "apidoc.inspector._inspect_parameter",
     "doc": null
    },
    "json": {
     "name": "json",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/json/__init__.py",
     "fqname": "apidoc.inspector.json"
    },
    "_FUNCTION_TYPE": {
     "type": "class"
    },
    "_get_module_path": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "module",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      49,
      59
     ],
     "fqname": "apidoc.inspector._get_module_path",
     "doc": null
    },
    "modules": {
     "name": "apidoc.modules",
     "type": "module",
     "path": "/Users/samuel/dev/apidoc/src/python/apidoc/modules.py",
     "fqname": "apidoc.inspector.modules"
    },
    "Context": {
     "doc": null,
     "mro": [
      "Context",
      "object"
     ],
     "fqname": "apidoc.inspector.Context",
     "dict": {
      "include": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "obj",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        29,
        37
       ],
       "fqname": "apidoc.inspector.Context.include",
       "doc": null
      }
     },
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      23,
      37
     ]
    }
   },
   "name": "apidoc.inspector",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/inspector.py"
  },
  "modules": {
   "doc": null,
   "fqname": "apidoc.modules",
   "dict": {
    "load_module": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "name",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      160,
      168
     ],
     "fqname": "apidoc.modules.load_module",
     "doc": null
    },
    "types": {
     "name": "types",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/types.py",
     "fqname": "apidoc.modules.types"
    },
    "import_module_from_filename": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      90,
      111
     ],
     "fqname": "apidoc.modules.import_module_from_filename",
     "doc": null
    },
    "get_submodules": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "package",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      147,
      158
     ],
     "fqname": "apidoc.modules.get_submodules",
     "doc": null
    },
    "logging": {
     "name": "logging",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py",
     "fqname": "apidoc.modules.logging"
    },
    "importlib": {
     "name": "importlib",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/importlib/__init__.py",
     "fqname": "apidoc.modules.importlib"
    },
    "sys": {
     "name": "sys",
     "type": "module",
     "path": "None",
     "fqname": "apidoc.modules.sys"
    },
    "Name": {
     "doc": "The fully-qualified name of a Python object.",
     "mro": [
      "Name",
      "object"
     ],
     "fqname": "apidoc.modules.Name",
     "dict": {
      "base": {
       "type": "value",
       "value": "<property object at 0x10139c3b8>"
      },
      "parent": {
       "type": "value",
       "value": "<property object at 0x10139c7c8>"
      }
     },
     "type": "class",
     "bases": [
      "object"
     ],
     "lines": [
      14,
      76
     ]
    },
    "is_package": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "obj",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      113,
      115
     ],
     "fqname": "apidoc.modules.is_package",
     "doc": null
    },
    "get_module_name_from_path": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      },
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "base_path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      79,
      87
     ],
     "fqname": "apidoc.modules.get_module_name_from_path",
     "doc": "Constructs the name of a module from its path relative to the import path."
    },
    "is_package_dir": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      117,
      123
     ],
     "fqname": "apidoc.modules.is_package_dir",
     "doc": "Returns true if 'path' is a package directory."
    },
    "SourceFileLoader": {
     "doc": "Concrete implementation of SourceLoader using the file system.",
     "mro": [
      "SourceFileLoader",
      "FileLoader",
      "SourceLoader",
      "_LoaderBasics",
      "object"
     ],
     "fqname": "apidoc.modules.SourceFileLoader",
     "dict": {
      "load_module": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_KEYWORD",
         "name": "kwargs",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.load_module",
       "doc": "Load a module from a file.\n\nThis method is deprecated.  Use exec_module() instead."
      },
      "exec_module": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "module",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.exec_module",
       "doc": "Execute the module."
      },
      "source_to_code": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "data",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path",
         "annotation": null,
         "default": null
        },
        {
         "kind": "KEYWORD_ONLY",
         "name": "_optimize",
         "annotation": null,
         "default": "-1"
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.source_to_code",
       "doc": "Return the code object compiled from source.\n\nThe 'data' argument can be any object type that compile() supports."
      },
      "set_data": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "data",
         "annotation": null,
         "default": null
        },
        {
         "kind": "KEYWORD_ONLY",
         "name": "_mode",
         "annotation": null,
         "default": "438"
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.set_data",
       "doc": "Write bytes data to a file."
      },
      "get_filename": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_KEYWORD",
         "name": "kwargs",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.get_filename",
       "doc": "Return the path to the source file as found by the finder."
      },
      "_cache_bytecode": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "source_path",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "bytecode_path",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "data",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader._cache_bytecode",
       "doc": null
      },
      "is_package": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "fullname",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.is_package",
       "doc": "Concrete implementation of InspectLoader.is_package by checking if\nthe path returned by get_filename has a filename of '__init__.py'."
      },
      "get_data": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.get_data",
       "doc": "Return the data from path as raw bytes."
      },
      "path_mtime": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.path_mtime",
       "doc": "Optional method that returns the modification time (an int) for the\nspecified path, where path is a str.\n\nRaises IOError when the path cannot be handled."
      },
      "get_code": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "fullname",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.get_code",
       "doc": "Concrete implementation of InspectLoader.get_code.\n\nReading of bytecode requires path_stats to be implemented. To write\nbytecode, set_data must also be implemented."
      },
      "path_stats": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.path_stats",
       "doc": "Return the metadata for the path."
      },
      "get_source": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "fullname",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": null,
       "fqname": "apidoc.modules.SourceFileLoader.get_source",
       "doc": "Concrete implementation of InspectLoader.get_source."
      }
     },
     "type": "class",
     "bases": [
      "FileLoader",
      "SourceLoader"
     ],
     "lines": [
      1603,
      1644
     ]
    },
    "os": {
     "name": "os",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/os.py",
     "fqname": "apidoc.modules.os"
    },
    "enumerate_package": {
     "parameters": [
      {
       "kind": "POSITIONAL_OR_KEYWORD",
       "name": "path",
       "annotation": null,
       "default": null
      }
     ],
     "type": "function",
     "lines": [
      125,
      145
     ],
     "fqname": "apidoc.modules.enumerate_package",
     "doc": "Generates subpackages and modules under a top-level package."
    },
    "Path": {
     "doc": null,
     "mro": [
      "Path",
      "PosixPath",
      "Path",
      "PurePosixPath",
      "PurePath",
      "object"
     ],
     "fqname": "apidoc.modules.Path",
     "dict": {
      "_make_child": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        619,
        624
       ],
       "fqname": "apidoc.modules.Path._make_child",
       "doc": null
      },
      "is_char_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1244,
        1256
       ],
       "fqname": "apidoc.modules.Path.is_char_device",
       "doc": "Whether this path is a character device."
      },
      "mkdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "parents",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1095,
        1108
       ],
       "fqname": "apidoc.modules.Path.mkdir",
       "doc": null
      },
      "rglob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        990,
        1001
       ],
       "fqname": "apidoc.modules.Path.rglob",
       "doc": "Recursively yield all existing files (of any kind, including\ndirectories) matching the given pattern, anywhere in this subtree."
      },
      "resolve": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1020,
        1039
       ],
       "fqname": "apidoc.modules.Path.resolve",
       "doc": "Make the path absolute, resolving all symlinks on the way and also\nnormalizing it (for example turning slashes into backslashes under\nWindows)."
      },
      "joinpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "args",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        819,
        826
       ],
       "fqname": "apidoc.modules.Path.joinpath",
       "doc": "Combine this path with one or several arguments, and return a\nnew path representing either a subpath (if all arguments are relative\npaths) or a totally different path (if one of the arguments is\nanchored)."
      },
      "_str": {
       "type": "value",
       "value": "<member '_str' of 'PurePath' objects>"
      },
      "exists": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1180,
        1191
       ],
       "fqname": "apidoc.modules.Path.exists",
       "doc": "Whether this path exists."
      },
      "is_socket": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1270,
        1282
       ],
       "fqname": "apidoc.modules.Path.is_socket",
       "doc": "Whether this path is a socket."
      },
      "symlink_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target_is_directory",
         "annotation": null,
         "default": "False"
        }
       ],
       "type": "function",
       "lines": [
        1169,
        1177
       ],
       "fqname": "apidoc.modules.Path.symlink_to",
       "doc": "Make this path a symlink pointing to the given path.\nNote the order of arguments (self, target) is the reverse of os.symlink's."
      },
      "rmdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1135,
        1142
       ],
       "fqname": "apidoc.modules.Path.rmdir",
       "doc": "Remove this directory.  The directory must be empty."
      },
      "parents": {
       "type": "value",
       "value": "<property object at 0x101146548>"
      },
      "parent": {
       "type": "value",
       "value": "<property object at 0x1011464f8>"
      },
      "is_dir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1192,
        1204
       ],
       "fqname": "apidoc.modules.Path.is_dir",
       "doc": "Whether this path is a directory."
      },
      "is_block_device": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1231,
        1243
       ],
       "fqname": "apidoc.modules.Path.is_block_device",
       "doc": "Whether this path is a block device."
      },
      "group": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1054,
        1060
       ],
       "fqname": "apidoc.modules.Path.group",
       "doc": "Return the group name of the file gid."
      },
      "_format_parsed_parts": {
       "type": "value",
       "value": "<bound method type._format_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "_init": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "template",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        915,
        924
       ],
       "fqname": "apidoc.modules.Path._init",
       "doc": null
      },
      "as_uri": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        649,
        654
       ],
       "fqname": "apidoc.modules.Path.as_uri",
       "doc": "Return the path as a 'file' URI."
      },
      "_parts": {
       "type": "value",
       "value": "<member '_parts' of 'PurePath' objects>"
      },
      "rename": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1152,
        1159
       ],
       "fqname": "apidoc.modules.Path.rename",
       "doc": "Rename this path to the given path."
      },
      "is_fifo": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1257,
        1269
       ],
       "fqname": "apidoc.modules.Path.is_fifo",
       "doc": "Whether this path is a FIFO."
      },
      "_hash": {
       "type": "value",
       "value": "<member '_hash' of 'PurePath' objects>"
      },
      "starts_with": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "prefix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        39,
        41
       ],
       "fqname": "apidoc.modules.Path.starts_with",
       "doc": null
      },
      "iterdir": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        964,
        977
       ],
       "fqname": "apidoc.modules.Path.iterdir",
       "doc": "Iterate over the files in this directory.  Does not yield any\nresult for the special paths '.' and '..'."
      },
      "drive": {
       "type": "value",
       "value": "<property object at 0x101146278>"
      },
      "match": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "path_pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        860,
        884
       ],
       "fqname": "apidoc.modules.Path.match",
       "doc": "Return True if this path matches the given pattern."
      },
      "is_symlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1219,
        1230
       ],
       "fqname": "apidoc.modules.Path.is_symlink",
       "doc": "Whether this path is a symbolic link."
      },
      "_raise_closed": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        939,
        941
       ],
       "fqname": "apidoc.modules.Path._raise_closed",
       "doc": null
      },
      "parts": {
       "type": "value",
       "value": "<property object at 0x1011464a8>"
      },
      "unlink": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1126,
        1134
       ],
       "fqname": "apidoc.modules.Path.unlink",
       "doc": "Remove this file or link.\nIf the path is a directory, use rmdir() instead."
      },
      "_flavour": {
       "type": "value",
       "value": "<pathlib._PosixFlavour object at 0x101131780>"
      },
      "as_posix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        635,
        640
       ],
       "fqname": "apidoc.modules.Path.as_posix",
       "doc": "Return the string representation of the path with forward (/)\nslashes."
      },
      "_raw_open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "511"
        }
       ],
       "type": "function",
       "lines": [
        946,
        954
       ],
       "fqname": "apidoc.modules.Path._raw_open",
       "doc": "Open the file pointed by this path and return a file descriptor,\nas os.open() does."
      },
      "_make_child_relpath": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "part",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        925,
        930
       ],
       "fqname": "apidoc.modules.Path._make_child_relpath",
       "doc": null
      },
      "stat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1040,
        1046
       ],
       "fqname": "apidoc.modules.Path.stat",
       "doc": "Return the result of the stat() system call on this path, like\nos.stat() does."
      },
      "root": {
       "type": "value",
       "value": "<property object at 0x1011462c8>"
      },
      "_cparts": {
       "type": "value",
       "value": "<property object at 0x101146228>"
      },
      "lchmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1117,
        1125
       ],
       "fqname": "apidoc.modules.Path.lchmod",
       "doc": "Like chmod(), except if the path points to a symlink, the symlink's\npermissions are changed, rather than its target's."
      },
      "name": {
       "type": "value",
       "value": "<property object at 0x101146368>"
      },
      "anchor": {
       "type": "value",
       "value": "<property object at 0x101146318>"
      },
      "_opener": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "flags",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        }
       ],
       "type": "function",
       "lines": [
        942,
        945
       ],
       "fqname": "apidoc.modules.Path._opener",
       "doc": null
      },
      "lstat": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1143,
        1151
       ],
       "fqname": "apidoc.modules.Path.lstat",
       "doc": "Like stat(), except if the path points to a symlink, the symlink's\nstatus information is returned, rather than its target's."
      },
      "_closed": {
       "type": "value",
       "value": "<member '_closed' of 'Path' objects>"
      },
      "open": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "'r'"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "buffering",
         "annotation": null,
         "default": "-1"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "encoding",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "errors",
         "annotation": null,
         "default": "None"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "newline",
         "annotation": null,
         "default": "None"
        }
       ],
       "type": "function",
       "lines": [
        1061,
        1071
       ],
       "fqname": "apidoc.modules.Path.open",
       "doc": "Open the file pointed by this path and return a file object, as\nthe built-in open() function does."
      },
      "chmod": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1109,
        1116
       ],
       "fqname": "apidoc.modules.Path.chmod",
       "doc": "Change the permissions of the path, like os.chmod()."
      },
      "with_name": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "name",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        748,
        754
       ],
       "fqname": "apidoc.modules.Path.with_name",
       "doc": "Return a new path with the file name changed."
      },
      "glob": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "pattern",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        978,
        989
       ],
       "fqname": "apidoc.modules.Path.glob",
       "doc": "Iterate over this subtree and yield all existing files (of any\nkind, including directories) matching the given pattern."
      },
      "_cached_cparts": {
       "type": "value",
       "value": "<member '_cached_cparts' of 'PurePath' objects>"
      },
      "_parse_args": {
       "type": "value",
       "value": "<bound method type._parse_args of <class 'apidoc.path.Path'>>"
      },
      "is_absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        848,
        854
       ],
       "fqname": "apidoc.modules.Path.is_absolute",
       "doc": "True if the path is absolute (has both a root and, if applicable,\na drive)."
      },
      "_drv": {
       "type": "value",
       "value": "<member '_drv' of 'PurePath' objects>"
      },
      "is_reserved": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        855,
        859
       ],
       "fqname": "apidoc.modules.Path.is_reserved",
       "doc": "Return True if the path contains one of the special names reserved\nby the system, if any."
      },
      "owner": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1047,
        1053
       ],
       "fqname": "apidoc.modules.Path.owner",
       "doc": "Return the login name of the file owner."
      },
      "with_suffix": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "suffix",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        25,
        37
       ],
       "fqname": "apidoc.modules.Path.with_suffix",
       "doc": "@todo\n  This hopefully will not be needed when the base method is fixed."
      },
      "_accessor": {
       "type": "value",
       "value": "<member '_accessor' of 'Path' objects>"
      },
      "_from_parsed_parts": {
       "type": "value",
       "value": "<bound method type._from_parsed_parts of <class 'apidoc.path.Path'>>"
      },
      "touch": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "mode",
         "annotation": null,
         "default": "438"
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "exist_ok",
         "annotation": null,
         "default": "True"
        }
       ],
       "type": "function",
       "lines": [
        1072,
        1094
       ],
       "fqname": "apidoc.modules.Path.touch",
       "doc": "Create this file with the given access mode, if it doesn't exist."
      },
      "_pparts": {
       "type": "value",
       "value": "<member '_pparts' of 'PurePath' objects>"
      },
      "relative_to": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "VAR_POSITIONAL",
         "name": "other",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        775,
        806
       ],
       "fqname": "apidoc.modules.Path.relative_to",
       "doc": "Return the relative path to another path identified by the passed\narguments.  If the operation is not possible (because this is not\na subpath of the other path), raise ValueError."
      },
      "_root": {
       "type": "value",
       "value": "<member '_root' of 'PurePath' objects>"
      },
      "absolute": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1002,
        1019
       ],
       "fqname": "apidoc.modules.Path.absolute",
       "doc": "Return an absolute version of this path.  This function works\neven if the path doesn't point to anything.\n\nNo normalization is done, i.e. all '.' and '..' will be kept along.\nUse resolve() to get the canonical path to a file."
      },
      "cwd": {
       "type": "value",
       "value": "<bound method type.cwd of <class 'apidoc.path.Path'>>"
      },
      "suffixes": {
       "type": "value",
       "value": "<property object at 0x101146408>"
      },
      "replace": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        },
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "target",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1160,
        1168
       ],
       "fqname": "apidoc.modules.Path.replace",
       "doc": "Rename this path to the given path, clobbering the existing\ndestination if it exists."
      },
      "suffix": {
       "type": "value",
       "value": "<property object at 0x1011463b8>"
      },
      "stem": {
       "type": "value",
       "value": "<property object at 0x101146458>"
      },
      "is_file": {
       "parameters": [
        {
         "kind": "POSITIONAL_OR_KEYWORD",
         "name": "self",
         "annotation": null,
         "default": null
        }
       ],
       "type": "function",
       "lines": [
        1205,
        1218
       ],
       "fqname": "apidoc.modules.Path.is_file",
       "doc": "Whether this path is a regular file (also True for symlinks pointing\nto regular files)."
      },
      "_from_parts": {
       "type": "value",
       "value": "<bound method type._from_parts of <class 'apidoc.path.Path'>>"
      }
     },
     "type": "class",
     "bases": [
      "PosixPath"
     ],
     "lines": [
      16,
      41
     ]
    },
    "functools": {
     "name": "functools",
     "type": "module",
     "path": "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/functools.py",
     "fqname": "apidoc.modules.functools"
    }
   },
   "name": "apidoc.modules",
   "type": "module",
   "path": "/Users/samuel/dev/apidoc/src/python/apidoc/modules.py"
  }
 }
}