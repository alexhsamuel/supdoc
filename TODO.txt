Inspection
* avoid callign inspect.getsourcelines() for every object; it's expensive
- callable flag separate from signature
- read through method descriptor
- if signature is missing for an extension type, try to parse it from the
  first line of the docstring

Doc support
* Inherited tag.
* Label items in __all__.

Markup
* Javadoc.
  - @ivar
  - @note
  - @author and all that
* Distinguish packages from modules.
* Mark built-in / frozen / extension modules.
* Mark modules part of Python library.
- Link Python library modules to docs.

Text UI
- show return type annotation (from signature, not javadoc)
- distinguish extension types / functions / modules
- distinguish builtin modules / contents from normal ones
- distinguish standard library modules / contents from other ones
- show/hide imports
- command line --help
- clean up styles
- add a help() replacement
- clean up code
- inherited members?
- Style class in pln.terminal.ansi
! help for an **object**!
- consider using https://pypi.python.org/pypi/blessings/
- clear screen, then restore full screen on exit?
- wire it up to less or $PAGER automatically
- test colorama on Windows

UI
* Object display based on doc components, rather than on type.
* Show function arguments on obj page.
* Better function object pages, with params etc.
* Label or select protected, private contents.
* Label inherited contents and where they're inherited from
* Select inherited contents or not.
* Show object name in breadcrumbs.
* Make check state persistent across navigation.
* Attribute sort order strategies: declaration, alphabetical, by type.
- Keyboard shortcuts for check state.
- Breadcrumb formatting.
- Move imports to a tab?
- Show submodules. (?)
- Details?
- Add non-module paths to breadcrumbs.
- Fix/test inherited attributes.
- Make module list hierarchical.
- Make module list collapsible.
- Create a (push, slide) side menu for modules ("off-canvas sidebar").
- Use Ace for code.
- Pretty-print values.
- Fold up large values.

Integeration
- Dynamic inspection + server.
- Dynamic reload.

Internals
* Rename package apidoc -> supdoc.
* Move reintegrate serve.py into Python source.
- Controller architecture makes no sense.
- Don't need to store name for objects if we have qualname.

Project
* Logo.
- Copyright banners in source.
- Copyright banner on page.

Testing
* Test on a third-party library.
* Test on standard library.
- Create a larger test corpus.

================================================================================
Some markup seen in the wild:

- double back-ticks for identifiers (abc.py)
