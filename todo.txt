- Make $scope.modname the module name, $scope.mod the object.
- property, staticmethod, classmethod
- Add non-module paths to breadcrumbs.
- Fix/test inherited attributes.
- Test on a third-party library.
- Make module list hierarchical.
- Make module list collapsible.
- Load modules separately.
- Controller architecture makes no sense.
- Create a (push, slide) side menu for modules ("off-canvas sidebar").
- Add values / other accordion section.
- Use Ace for code.
- Write markup formatters.
- Create a larger test corpus.
- Fix tabs.
- Make accordian state persistent across navigation.
- Mark built-in / frozen / extension modules.
- Mark modules part of Python library.
- Link Python library modules to docs.
- Style navigatable links.  Change pointer?
- Only include direct module contents, not imported stuff.
- Label protected / private contents.
- Select protected / private contents.
- Label inherited contents and where they're inherited from
- Select inherited contents or not.

--------------------------------------------------------------------------------
Before upload to github:
- Copyright banners in source.
- Copyright banner on page.
- Name.
- Logo.

================================================================================
Done
- Remove module list from top.
- Create a module index page.
- Rename moduleName -> fqName et seq.
- Make json fully hierarchical.  List submodules in packages.
- Package breadcrumbs.
- Serve Bootstrap, AngularJS, etc locally.
- Use Angular directives to set up Bootstrap stuff e.g. module link, class link.
- Create a class page.
- Create a function page.
- Sort module list on index.
